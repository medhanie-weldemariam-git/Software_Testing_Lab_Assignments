Running Symbolic PathFinder ...
symbolic.dp=choco
symbolic.string_dp_timeout_ms=0
symbolic.string_dp=none
symbolic.choco_time_bound=30000
symbolic.max_pc_length=2147483647
symbolic.max_pc_msec=0
symbolic.min_int=-1000000
symbolic.max_int=1000000
symbolic.min_double=-8.0
symbolic.max_double=7.0
JavaPathfinder v7.0 (rev 1217+) - (C) RIACS/NASA Ames Research Center


====================================================== system under test
triangle.Main.main()

====================================================== search started: 2015-04-21 11:21
Enter the triangle side lengths: NaT
NaT
NaT
Isosceles

====================================================== Method Summaries
Inputs: side1_CONCRETE,,side2_CONCRETE,,side3_1_SYMINT

triangle.Triangle.getType(1,2,-1000000)  --> Return Value: triangle.Triangle$TriangleType@173
triangle.Triangle.getType(1,2,1)  --> Return Value: triangle.Triangle$TriangleType@173
triangle.Triangle.getType(1,2,3)  --> Return Value: triangle.Triangle$TriangleType@173
triangle.Triangle.getType(1,2,2)  --> Return Value: triangle.Triangle$TriangleType@16a
Inputs: side1_CONCRETE,,side2_CONCRETE,,side3_1_SYMINT

triangle.Triangle.getType(1,2,-1000000)  --> Return Value: triangle.Triangle$TriangleType@173
triangle.Triangle.getType(1,2,1)  --> Return Value: triangle.Triangle$TriangleType@173
triangle.Triangle.getType(1,2,3)  --> Return Value: triangle.Triangle$TriangleType@173
triangle.Triangle.getType(1,2,2)  --> Return Value: triangle.Triangle$TriangleType@16a

====================================================== Method Summaries (HTML)
<h1>Test Cases Generated by Symbolic JavaPath Finder for triangle.Triangle.getType (Path Coverage) </h1>
<table border=1>
<tr><td>side1_CONCRETE</td><td>side2_CONCRETE</td><td>side3_1_SYMINT</td><td>RETURN</td></tr>
<tr><td>1</td><td>2</td><td>-1000000</td><td>Return Value: triangle.Triangle$TriangleType@173</td></tr>
<tr><td>1</td><td>2</td><td>1</td><td>Return Value: triangle.Triangle$TriangleType@173</td></tr>
<tr><td>1</td><td>2</td><td>3</td><td>Return Value: triangle.Triangle$TriangleType@173</td></tr>
<tr><td>1</td><td>2</td><td>2</td><td>Return Value: triangle.Triangle$TriangleType@16a</td></tr>
</table>
<h1>Test Cases Generated by Symbolic JavaPath Finder for triangle.Triangle.getType (Path Coverage) </h1>
<table border=1>
<tr><td>side1_CONCRETE</td><td>side2_CONCRETE</td><td>side3_1_SYMINT</td><td>RETURN</td></tr>
<tr><td>1</td><td>2</td><td>-1000000</td><td>Return Value: triangle.Triangle$TriangleType@173</td></tr>
<tr><td>1</td><td>2</td><td>1</td><td>Return Value: triangle.Triangle$TriangleType@173</td></tr>
<tr><td>1</td><td>2</td><td>3</td><td>Return Value: triangle.Triangle$TriangleType@173</td></tr>
<tr><td>1</td><td>2</td><td>2</td><td>Return Value: triangle.Triangle$TriangleType@16a</td></tr>
</table>

====================================================== Method Sequences
[getType(1,2,-1000000)]
[getType(1,2,1)]
[getType(1,2,3)]
[getType(1,2,2)]

====================================================== JUnit 4.0 test class
import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;

public class triangle_TriangleTest {

	private triangle.Triangle triangle_triangle;

	@Before
	public void setUp() throws Exception {
		triangle_triangle = new triangle.Triangle();
	}

	@Test
	public void test0() {
		triangle_triangle.getType(1,2,-1000000);
	}

	@Test
	public void test1() {
		triangle_triangle.getType(1,2,1);
	}

	@Test
	public void test2() {
		triangle_triangle.getType(1,2,3);
	}

	@Test
	public void test3() {
		triangle_triangle.getType(1,2,2);
	}
}

====================================================== results
no errors detected

====================================================== statistics
elapsed time:       00:00:00
states:             new=8,visited=0,backtracked=8,end=4
search:             maxDepth=5,constraints=0
choice generators:  thread=1 (signal=0,lock=1,sharedRef=0,threadApi=0,reschedule=0), data=4
heap:               new=379,released=50,maxLive=377,gcCycles=8
instructions:       3685
max memory:         240MB
loaded code:        classes=59,methods=1102

====================================================== search finished: 2015-04-21 11:21
